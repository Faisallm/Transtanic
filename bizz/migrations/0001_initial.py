# Generated by Django 2.0.6 on 2020-05-11 07:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import sorl.thumbnail.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Governor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('party', models.CharField(max_length=500)),
                ('image', models.FileField(upload_to='election/%y/%m/%d')),
                ('party_logo', models.FileField(upload_to='election_logo/%y/%m/%d')),
                ('counts', models.DecimalField(decimal_places=0, max_digits=7)),
                ('percent', models.CharField(default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=250)),
                ('introduction', models.TextField(blank=True, null=True)),
                ('post', models.TextField(blank=True, default='', null=True)),
                ('paragraph_2', models.TextField(blank=True, default='', null=True)),
                ('paragraph_3', models.TextField(blank=True, default='', null=True)),
                ('paragraph_4', models.TextField(blank=True, default='', null=True)),
                ('paragraph_5', models.TextField(blank=True, default='', null=True)),
                ('question', models.CharField(blank=True, max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, default='', null=True, upload_to='post/%y/%m/%d')),
                ('video', models.FileField(blank=True, default='', null=True, upload_to='post_videos/%y/%m/%d')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
                ('users_hate', models.ManyToManyField(blank=True, related_name='post_hated', to=settings.AUTH_USER_MODEL)),
                ('users_like', models.ManyToManyField(blank=True, related_name='post_liked', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(default='', max_length=500, unique_for_date='created')),
                ('name', models.CharField(max_length=250)),
                ('category', models.CharField(choices=[('electronics', 'Electronics'), ('clothing', 'Clothing'), ('food', 'Food')], default='clothing', max_length=20)),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('stock', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('photo', sorl.thumbnail.fields.ImageField(blank=True, null=True, upload_to='products/%y/%m/%d')),
                ('photo0', sorl.thumbnail.fields.ImageField(blank=True, default='', null=True, upload_to='products/%y/%m/%d')),
                ('photo1', sorl.thumbnail.fields.ImageField(blank=True, default='', null=True, upload_to='products/%y/%m/%d')),
                ('photo2', sorl.thumbnail.fields.ImageField(blank=True, default='', null=True, upload_to='products/%y/%m/%d')),
                ('photo3', sorl.thumbnail.fields.ImageField(blank=True, default='', null=True, upload_to='products/%y/%m/%d')),
                ('payment_link', models.CharField(blank=True, max_length=10000)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('available', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('total_views', models.PositiveIntegerField(default=0)),
                ('total_likes', models.IntegerField(default=0)),
                ('video', models.FileField(blank=True, default='', null=True, upload_to='videos/%y/%m/%d')),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=300)),
                ('business_address', models.CharField(choices=[('private', 'Private')], default='private', max_length=20)),
                ('shop_address', models.CharField(db_index=True, default='', max_length=300)),
                ('home_address', models.CharField(max_length=500)),
                ('logo', sorl.thumbnail.fields.ImageField(blank=True, upload_to='bizz/%y/%m/%d')),
                ('Bank', models.CharField(choices=[('Access Bank Plc', 'Access Bank Plc'), ('Citibank Nigeria Limited', 'Citibank Nigeria Limited'), ('Diamond Bank Plc', 'Diamond Bank Plc'), ('Ecobank Nigeria Plc', 'Ecobank Nigeria Plc'), ('Fidelity Bank Plc', 'Fidelity Bank Plc'), ('First City Monument Bank Plc', 'First City Monument Bank Plc'), ('First Bank Limited', 'First Bank Limited'), ('Guaranty Trust Bank Plc', 'Guaranty Trust Bank Plc'), ('Heritage Banking Company Limited', 'Heritage Banking Company Limited'), ('JAIZ Bank Plc', 'JAIZ Bank Plc'), ('Keystone Bank Limited', 'Keystone Bank Limited'), ('Polaris Bank Limited', 'Polaris Bank Limited'), ('Providus Bank Limited', 'Providus Bank Limited'), ('Stanbic IBTC Bank Plc', 'Stanbic IBTC Bank Plc'), ('Standard Chartered', 'Standard Chartered'), ('Sterling Bank Plc', 'Sterling Bank Plc'), ('SunTrust Bank Nigeria Limited', 'SunTrust Bank Nigeria Limited'), ('Union Bank of Nigeria Plc', 'Union Bank of Nigeria Plc'), ('United Bank for Africa Plc', 'United Bank for Africa Plc'), ('Unity Bank Plc', 'Unity Bank Plc'), ('Wema Bank Plc', 'Wema Bank Plc'), ('Zenith Bank Plc', 'Zenith Bank Plc')], default='', max_length=250)),
                ('account_number', models.CharField(blank=True, max_length=10, null=True)),
                ('account_name', models.CharField(blank=True, default='', max_length=250)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('description', models.TextField(default='')),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shop', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Supporter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supporters', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='bizz.Shop'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='product',
            name='users_hate',
            field=models.ManyToManyField(blank=True, related_name='product_hated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='users_like',
            field=models.ManyToManyField(blank=True, related_name='product_liked', to=settings.AUTH_USER_MODEL),
        ),
    ]
